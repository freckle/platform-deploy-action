description: Deploy using the Freckle Platform CLI
inputs:
  platform-setup-version:
    description: Version of Platform CLI to install
    required: true
    default: ""
  platform-setup-token:
    description: GitHub token with access to freckle/platform artifacts
    required: true
  app-directory:
    description: Directory containing the App's .platform
    required: true
    default: "."
  app-resource:
    description: --resource option
    required: true
    default: ""
  environment:
    description: Environment to deploy (required)
    required: true
  slack-webhook:
    description: Slack Webhook URL with which to notify, if desired
    default: "unused"
  ignore-status:
    description: Avoid notifying on matching action_status (given as JSON array of strings)
    required: true
    default: "[]"
outputs: {}
runs:
  using: composite
  steps:
    - uses: freckle/setup-platform-action@v6
      with:
        version: ${{ inputs.platform-setup-version }}
        token: ${{ inputs.platform-setup-token }}

    - id: deploy
      shell: bash
      run: |
        cd '${{ inputs.app-directory }}'
        options=()

        if [[ -n '${{ inputs.app-resource }}' ]]; then
          options+=( --resource '${{ inputs.app-resource }}' )
        fi

        if platform --color always version &>/dev/null; then
          options+=( --color always )
        fi

        platform --environment '${{ inputs.environment }}' "${options[@]}" \
          deploy --tag '${{ github.sha }}' --no-confirm

        {
          printf 'stackNames='
          platform --environment '${{ inputs.environment }}' "${options[@]}" \
            query settings.StackName |
              paste -s -d, - |
              sed 's/,$//; s/,/, /g'
        } >>"$GITHUB_OUTPUT"

    - if: ${{ always() && inputs.slack-webhook != 'unused'}}
      id: prep
      shell: bash
      run: |
        # action_status has been coming out as "Failure", not "failure" as the
        # docs indicate. To use it as a Slack color, it needs to be
        # lower-case, so we'll fix that here.
        status=${{ github.action_status }}
        printf 'status=%s\n' "${status,,}" >>"$GITHUB_OUTPUT"

    - if: ${{ always() && inputs.slack-webhook != 'unused' && !contains(fromJSON(inputs.ignore-status), steps.prep.outputs.status) }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_COLOR: ${{ steps.prep.outputs.status }}
        SLACK_ICON: https://github.com/freckle-automation.png?size=48
        SLACK_USERNAME: GitHub Actions
        SLACK_TITLE: ${{ github.repository }} deployment
        SLACK_MESSAGE: ${{ steps.prep.outputs.status }}
        SLACK_FOOTER: ${{ steps.deploy.outputs.stackNames }}
        SLACK_WEBHOOK: ${{ inputs.slack-webhook }}
        MSG_MINIMAL: actions url,commit
